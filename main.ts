namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
9 9 9 9 f f f f f f f 9 9 9 9 9 
9 9 f f . . 8 . . . . f f 9 9 9 
9 f 1 1 . . 8 . . . . 8 . f 9 9 
9 f 1 1 . . 8 . . . . 8 . f 9 9 
f 1 1 . . . 8 . . . . 8 . . f 9 
f 1 . . . . 8 . . . . 8 . . f 9 
f 1 . . . . . . . . . 8 . . f 9 
f 1 . . . . . . . . . . . 8 f 9 
f 1 . . . . . . . . . . . 8 f 9 
f 1 . . . . . . . . . . . 8 8 9 
9 f 1 . . . . . . . . . 1 . f 9 
9 f 1 . . . . . . . . . 1 f 9 9 
9 f 1 1 . . . . . . 1 1 1 f 9 9 
9 9 f f 1 1 1 1 1 1 1 f f 9 9 9 
9 9 9 9 f f f f f f f 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
`
}
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.collectibleRedCrystal, function (sprite, location) {
    info.changeScoreBy(1)
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile2, function (sprite, location) {
    game.over(true)
})
scene.setBackgroundColor(9)
let mySprite = sprites.create(img`
. . . . . . . . . . . f f f f . 
. . . . . . . . . . . f . . f . 
. . . . 1 1 1 1 1 . . f f . f . 
. . . . 1 1 1 1 1 1 f f f f f 1 
. . . . 1 1 1 1 1 f f . . . 1 1 
. . . . 1 1 1 1 f f . . . . . . 
. . . . . 1 1 1 f f . . f f . . 
. . . . . . 1 f f f f f f . . . 
. . . . . . f f . . . . . . . . 
. f f f f f f f . . . . . . . . 
. f f f f f f f f . . . . . . . 
. f f f f f f f f . . . . . . . 
. . f f f . f f f f . . . . . . 
. . . . . . . f f f . . . . . . 
. . . . . . . f f f . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Player)
controller.moveSprite(mySprite)
tiles.setTilemap(tiles.createTilemap(
            hex`18001800010101010101010101010101010101010101010101000100050000000000000000000000000000000000000000000100010101010101000101010101010101000101010101000100000000000001000101010101010101000100000001000100000101000001000100000000000001000100000001000100000001010101000100010101010001000100000001000100010000000000000100010000010001000101010101000100010100010101010100010101010001000000000001000100000100010000000000010000000001000101010101000100000100010001010101010001010101000100000001000100000100010000000000010001000000000100000001000100000100010101010101010001010100000100010101000100000100000000000000000000000000000101010000000100000100010101010101010100010000000100000001000100000100010000000000000100010000010100000101000101000100010000000000000100010001010000010001000000000100010000000000000100010001000001000001000100000100010101010101010100010001000100000001000100000100000000000000000000010101000100000001000100010103010101010101010100010100000100000001000100030303010000000000000100010100000100000001000100030101010100000101010100010100000101010101010100030000040100000100000000010101000000000000000001010101010100000101010101010001010101010101000006`,
            img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 . 
. . . . . . . . . . . . . . . . . . . . . . 2 . 
2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 . 2 2 2 2 2 . 2 . 
. . . . 2 2 . 2 2 2 2 2 2 2 2 . 2 . . . 2 . 2 . 
. 2 2 . . 2 . 2 . . . . . . 2 . 2 . . . 2 . 2 . 
. . 2 2 2 2 . 2 . 2 2 2 2 . 2 . 2 . . . 2 . 2 . 
2 . . . . . . 2 . 2 . . 2 . 2 . 2 2 2 2 2 . 2 . 
2 2 . 2 2 2 2 2 . 2 2 2 2 . 2 . . . . . 2 . 2 . 
. 2 . 2 . . . . . 2 . . . . 2 . 2 2 2 2 2 . 2 . 
. 2 . 2 . 2 2 2 2 2 . 2 2 2 2 . 2 . . . 2 . 2 . 
. 2 . 2 . . . . . 2 . 2 . . . . 2 . . . 2 . 2 . 
. 2 . 2 2 2 2 2 2 2 . 2 2 2 . . 2 . 2 2 2 . 2 . 
. 2 . . . . . . . . . . . . . . 2 2 2 . . . 2 . 
. 2 . 2 2 2 2 2 2 2 2 . 2 . . . 2 . . . 2 . 2 . 
. 2 . 2 . . . . . . 2 . 2 . . 2 2 . . 2 2 . 2 2 
. 2 . 2 . . . . . . 2 . 2 . 2 2 . . 2 . 2 . . . 
. 2 . 2 . . . . . . 2 . 2 . 2 . . 2 . . 2 . 2 . 
. 2 . 2 2 2 2 2 2 2 2 . 2 . 2 . 2 . . . 2 . 2 . 
. 2 . . . . . . . . . . 2 2 2 . 2 . . . 2 . 2 . 
2 2 . 2 2 2 2 2 2 2 2 . 2 2 . . 2 . . . 2 . 2 . 
. . . 2 . . . . . . 2 . 2 2 . . 2 . . . 2 . 2 . 
. 2 2 2 2 . . 2 2 2 2 . 2 2 . . 2 2 2 2 2 2 2 . 
. . . . 2 . . 2 . . . . 2 2 2 . . . . . . . . 2 
2 2 2 2 2 . . 2 2 2 2 2 2 . 2 2 2 2 2 2 2 . . . 
`,
            [myTiles.tile0,sprites.builtin.oceanDepths0,myTiles.tile1,sprites.builtin.coral1,sprites.dungeon.collectibleRedCrystal,sprites.builtin.oceanDepths10,myTiles.tile2],
            TileScale.Sixteen
        ))
tiles.placeOnRandomTile(mySprite, sprites.builtin.oceanDepths10)
scene.cameraFollowSprite(mySprite)
info.startCountdown(30)
